// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package main is a generated GoMock package.
package service

import (
	reflect "reflect"

	api "github.com/SevereCloud/vksdk/v2/api"
	gomock "github.com/golang/mock/gomock"
)

// MockVkClient is a mock of VkClient interface.
type MockVkClient struct {
	ctrl     *gomock.Controller
	recorder *MockVkClientMockRecorder
}

// MockVkClientMockRecorder is the mock recorder for MockVkClient.
type MockVkClientMockRecorder struct {
	mock *MockVkClient
}

// NewMockVkClient creates a new mock instance.
func NewMockVkClient(ctrl *gomock.Controller) *MockVkClient {
	mock := &MockVkClient{ctrl: ctrl}
	mock.recorder = &MockVkClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVkClient) EXPECT() *MockVkClientMockRecorder {
	return m.recorder
}

// GroupsBan mocks base method.
func (m *MockVkClient) GroupsBan(params api.Params) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GroupsBan", params)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GroupsBan indicates an expected call of GroupsBan.
func (mr *MockVkClientMockRecorder) GroupsBan(params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GroupsBan", reflect.TypeOf((*MockVkClient)(nil).GroupsBan), params)
}

// UsersGet mocks base method.
func (m *MockVkClient) UsersGet(params api.Params) (api.UsersGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UsersGet", params)
	ret0, _ := ret[0].(api.UsersGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UsersGet indicates an expected call of UsersGet.
func (mr *MockVkClientMockRecorder) UsersGet(params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UsersGet", reflect.TypeOf((*MockVkClient)(nil).UsersGet), params)
}

// WallDeleteComment mocks base method.
func (m *MockVkClient) WallDeleteComment(params api.Params) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WallDeleteComment", params)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WallDeleteComment indicates an expected call of WallDeleteComment.
func (mr *MockVkClientMockRecorder) WallDeleteComment(params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WallDeleteComment", reflect.TypeOf((*MockVkClient)(nil).WallDeleteComment), params)
}
